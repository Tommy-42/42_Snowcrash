# we just run john without any arguments
```
Usage: john [OPTIONS] [PASSWORD-FILES]
--single                   "single crack" mode
--wordlist=FILE --stdin    wordlist mode, read words from FILE or stdin
--rules                    enable word mangling rules for wordlist mode
--incremental[=MODE]       "incremental" mode [using section MODE]
--external=MODE            external mode or word filter
--stdout[=LENGTH]          just output candidate passwords [cut at LENGTH]
--restore[=NAME]           restore an interrupted session [called NAME]
--session=NAME             give a new session the NAME
--status[=NAME]            print status of a session [called NAME]
--make-charset=FILE        make a charset, FILE will be overwritten
--show                     show cracked passwords
--test[=TIME]              run tests and benchmarks for TIME seconds each
--users=[-]LOGIN|UID[,..]  [do not] load this (these) user(s) only
--groups=[-]GID[,..]       load users [not] of this (these) group(s) only
--shells=[-]SHELL[,..]     load users with[out] this (these) shell(s) only
--salts=[-]COUNT           load salts with[out] at least COUNT passwords only
--format=NAME              force hash type NAME: DES/BSDI/MD5/BF/AFS/LM/crypt
--save-memory=LEVEL        enable memory saving, at LEVEL 1..3
```
# we can see the usage: john [OPTIONS] [PASSWORD-FILES]
# we find an interesting option: --show show cracked passwords
# we also find this: --users=[-]LOGIN|UID[,..]  [do not] load this (these) user(s) only
# so lets try
```
level04@BornToSec:~$ john --users=flag04 /etc/passwd
```
# results
```
Loaded 1 password hash (Traditional DES [128/128 BS SSE2])
abcdefg          (flag04)
guesses: 1  time: 0:00:00:00 100% (2)  c/s: 152100  trying: runner - acropoli
Use the "--show" option to display all of the cracked passwords reliably
```
# then the option --show
```
level04@BornToSec:~$ john --show /etc/passwd
flag04:abcdefg:3004:3004::/home/flag/flag04:/bin/bash
1 password hash cracked, 0 left
```
# lets try
```
level04@BornToSec:~$ su flag04
Password:
Don't forget to launch getflag !
flag04@BornToSec:~$ getflag
Check flag.Here is your token : ne2searoevaevoem4ov4ar8ap
```